{"version":3,"sources":["components/Loader.js","utils/constants.js","utils/weatherHelper.js","components/WeatherChart.js","redux/types.js","redux/services/request.js","redux/services/weather.js","utils/globalFunctions.js","redux/actions/weatherActions.js","utils/useDeviceDetect.js","components/WeatherInfo.js","containers/Weather.js","App.js","redux/store.js","reportWebVitals.js","redux/reducers/weatherReducer.js","redux/reducers/index.js","index.js"],"names":["Loader","className","role","aria-busy","aria-label","constants","transformWeatherData","data","cardsData","barChartData","tempsInADate","date","i","getFormatedDate","dataObject","pushCardsData","push","temp","main","time","formatDate","length","avg_temp","reduce","acc","el","moment","format","getTemperatureWiseCalculation","value","temp_unit","Math","round","kelvinToFahrenheit","kelvinToCelcius","convertTemprature","kelvinTemp","WeatherChart","props","dateSpecificTemps","useSelector","state","weather","shallowEqual","selected_index","barChartIndex","useState","chartData","setChartData","useEffect","temp_data","getDataForChart","classes","makeStyles","chartRoot","maxHeight","marginTop","useStyles","labelComponent","e","Label","text","split","x","y","max","showLabels","name","valueField","argumentField","GET_WEATHER_DATA_SUCCESS","GET_WEATHER_DATA_LOAD","GET_WEATHER_DATA_ERR","SET_TEMP_UNIT","SET_PAGE_SIZE","SET_SELECTED_INDEX","request","options","client","axios","create","baseURL","process","headers","onError","error","a","response","status","Promise","reject","message","then","catch","getWeatherData","query_string","url","method","_checkValidStatus","includes","cod","isObject","obj","isMobile","document","getScreenWidth","isTablet","isDesktop","body","documentElement","clientWidth","getDisplayableTempIndex","switchedIndex","page_size","nextAllowedIndex","next","alreadyAllowedIndex","allowedIndexes","Array","from","_","setSelectedIndex","newIndex","type","types","setPageSize","useDeviceDetect","devices","setDevices","window","addEventListener","object1","object2","keys1","Object","keys","keys2","key","ObjectShallowEqualityCheck","WeatherInfo","displayableIndex","setDisplayableIndex","dispatch","useDispatch","root","maxWidth","radio","rotate","transform","arrowIcon","fontSize","cardBorder","border","RadioGroup","onChange","tempUnit","target","Box","display","px","py","flexGrow","FormControlLabel","control","Radio","color","label","onClick","clsx","Grid","container","spacing","justify","map","item","Card","CardContent","Typography","variant","component","dangerouslySetInnerHTML","__html","CardActions","Weather","isLoaded","setIsLoaded","weatherData","requestData","entries","forEach","val","join","convert_obj_to_query_string","q","APPID","cnt","res","list","margin","console","log","Container","App","_store","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","payload","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5f9c7f18.chunk.js","sourcesContent":["import '../styles/Loader.css';\r\n\r\nfunction Loader() {\r\n\r\n  return (\r\n    <main className=\"loader-container\"> \r\n        <div role=\"alert\" aria-busy=\"true\" aria-label=\"Loading\">Loading...</div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","export const constants = {\r\n    temp_fahrenheit: 'fahrenheit',\r\n    temp_celcius: 'celcius',\r\n    mobile_page_size: 2,\r\n    desktop_page_size: 3,\r\n    mobile_max_width: 460, //Now considered 460px as mobile but generally we consider max width around 600px\r\n    tablet_max_width: 1136\r\n}","import moment from 'moment';\r\nimport { constants } from './constants';\r\n\r\nexport const transformWeatherData =  (data) =>{\r\n\r\n    \r\n\r\n\r\n    let cardsData = [];\r\n    let barChartData = {};\r\n    let tempsInADate = [];\r\n    let date=\"\";\r\n    for(let i in data){\r\n        if(getFormatedDate(data[i]['dt_txt'])!=getFormatedDate(date)){\r\n\r\n            let dataObject = pushCardsData(tempsInADate, date, cardsData, barChartData)\r\n            cardsData = dataObject.cardsData;\r\n            barChartData = dataObject.barChartData;\r\n            tempsInADate = [];\r\n        }\r\n        tempsInADate.push({temp: data[i]?.main?.temp, time:formatDate(data[i]['dt_txt'], 'HH:mm')});\r\n        date = data[i]['dt_txt'];\r\n    }\r\n\r\n    let dataObject = pushCardsData(tempsInADate, date, cardsData, barChartData)\r\n    cardsData = dataObject.cardsData;\r\n    barChartData = dataObject.barChartData;\r\n\r\n    \r\n    return {\r\n        cardsData,\r\n        barChartData\r\n    }\r\n\r\n}\r\n\r\nfunction pushCardsData (tempsInADate, date ,cardsData, barChartData ){\r\n    let return_data = [];\r\n    if(tempsInADate?.length>0){\r\n        let avg_temp = tempsInADate.reduce((acc,el)=>acc+el?.temp,0)/tempsInADate?.length\r\n        cardsData.push({\r\n            date: getFormatedDate(date),\r\n            avg_temp\r\n        })\r\n    }\r\n    if(tempsInADate?.length>0){\r\n        barChartData[getFormatedDate(date)] = tempsInADate;\r\n    }\r\n    return_data = {\r\n        cardsData,\r\n        barChartData\r\n    }\r\n    return return_data;\r\n}\r\nexport const getFormatedDate = (date)=>{\r\n    return moment(date).format('DD MMM YY');\r\n}\r\n\r\nexport const formatDate = (date, format)=>{\r\n    return moment(date).format(format);\r\n}\r\n\r\nexport const getTemperatureWiseCalculation = (value, temp_unit) => {\r\n    if(temp_unit===constants.temp_fahrenheit){\r\n        return `${Math.round(kelvinToFahrenheit(value))}℉`\r\n    }\r\n    else\r\n    {\r\n        return `${Math.round(kelvinToCelcius(value))}&#8451;`\r\n    }\r\n}\r\n\r\nexport const convertTemprature = (value, temp_unit) => {\r\n    if(temp_unit===constants.temp_fahrenheit){\r\n        return Math.round(kelvinToFahrenheit(value))\r\n    }\r\n    else\r\n    {\r\n        return Math.round(kelvinToCelcius(value))\r\n    }\r\n}\r\n\r\nexport const getDataForChart = (temp_data, temp_unit) => {\r\n    let data = [];\r\n    for(let i in temp_data){\r\n        data.push({temp: convertTemprature(temp_data[i]?.temp, temp_unit),time:`${temp_data[i]?.time} - ${convertTemprature(temp_data[i]?.temp, temp_unit)}${temp_unit===constants.temp_celcius?'℃':'℉'}`});\r\n    }\r\n    return data;\r\n}\r\n\r\nexport const fahrenheitToCelcius = (fTemp)=>{\r\n    \r\n    return (fTemp - 32) * 5 / 9;\r\n}\r\n\r\nexport const kelvinToFahrenheit = (kelvinTemp) => {\r\n    return ((kelvinTemp-273.15)*1.8)+32\r\n}\r\n\r\nexport const kelvinToCelcius = (kelvinTemp) => {\r\n    return kelvinTemp-273.15\r\n}","import {\r\n    Chart,\r\n    BarSeries,\r\n    Title,\r\n    ArgumentAxis,\r\n    ValueAxis\r\n  } from '@devexpress/dx-react-chart-material-ui';\r\n  \r\n  import { Animation } from '@devexpress/dx-react-chart';\r\nimport { shallowEqual, useSelector } from 'react-redux';\r\nimport { useEffect, useState } from 'react';\r\nimport { getDataForChart } from '../utils/weatherHelper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction WeatherChart(props){\r\n\r\n    const cardsData = useSelector((state)=>state.weather?.data?.cardsData, shallowEqual);\r\n    const selected_index = useSelector((state)=>state.weather?.selected_index);\r\n    const temp_unit = useSelector((state)=>state.weather?.temp_unit);\r\n    const barChartIndex = cardsData?cardsData[selected_index]?.date: false;\r\n    const [chartData, setChartData] = useState([]);\r\n    let dateSpecificTemps;\r\n    if(barChartIndex){\r\n        dateSpecificTemps = props.data[barChartIndex];\r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n        if(dateSpecificTemps)\r\n        setChartData(getDataForChart(dateSpecificTemps, temp_unit));\r\n\r\n    },[temp_unit,selected_index])\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    chartRoot: {\r\n      maxHeight: 200,\r\n      marginTop:'15%'\r\n    }\r\n    \r\n  });\r\nconst classes = useStyles();\r\n    return (\r\n        <>\r\n            <Chart\r\n            data={chartData}\r\n            className={classes.chartRoot}\r\n            >\r\n                <ArgumentAxis labelComponent={(e)=>{ return (<ArgumentAxis.Label text={e.text.split('-')[1]} x={e.x} y={e.y} />); }} />\r\n                <ValueAxis max={8} showLabels={false} />\r\n                \r\n                <BarSeries\r\n                    name = \"test\"\r\n                    valueField=\"temp\"\r\n                    argumentField=\"time\" \r\n                    \r\n                />\r\n                    \r\n                    \r\n                <Animation />\r\n            </Chart>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default WeatherChart;","\r\nexport const GET_WEATHER_DATA_SUCCESS = 'GET_WEATHER_DATA_SUCCESS'\r\nexport const GET_WEATHER_DATA_LOAD = 'GET_WEATHER_DATA_LOAD'\r\nexport const GET_WEATHER_DATA_ERR = 'GET_WEATHER_DATA_ERR'\r\n\r\nexport const SET_TEMP_UNIT = 'SET_TEMP_UNIT'\r\nexport const SET_PAGE_SIZE = 'SET_PAGE_SIZE'\r\nexport const SET_SELECTED_INDEX = 'SET_SELECTED_INDEX'","import axios from 'axios'\r\n/**\r\n * Request Wrapper with default success/error actions\r\n */\r\nconst request = options => {\r\n    /**\r\n     * Create an Axios Client with defaults\r\n     */\r\n    let headers = {\r\n        'Content-Type': 'application/json',\r\n        \"Accept\": \"application/json\",\r\n    }\r\n\r\n    const client = axios.create({\r\n        baseURL: process.env.REACT_APP_WEATHER_SERVER_BASE_URL,\r\n        headers: headers\r\n    });\r\n\r\n    const onSuccess = (response) => {\r\n        return response.data;\r\n    }\r\n\r\n    const onError = async (error) => {\r\n        if (error.response) {\r\n            if (error.response.status === 401 || error.response.status === 403) {\r\n\r\n            }\r\n            if(error.response.status === 404){\r\n                // history.push('/404')\r\n            }\r\n            return Promise.reject(!!error.response.data ? error.response.data : error.response || error.message);\r\n        } else if (error.request) {\r\n\r\n            // history.push('/app/error/500')\r\n\r\n            return Promise.reject(error.request);\r\n        } else {\r\n            // Something else happened while setting up the request\r\n            // triggered the error\r\n            // history.push('/app/error/500')\r\n            return Promise.reject(error.message);\r\n        }\r\n\r\n    }\r\n\r\n    return client(options)\r\n        .then(onSuccess)\r\n        .catch(onError);\r\n}\r\n\r\n\r\nexport default request;","import request from \"@/redux/services/request\";\r\n\r\n\r\nexport const getWeatherData = (query_string=\"\") => {\r\n    return request({\r\n        url: `/data/2.5/forecast${query_string}`,\r\n        method: 'GET',\r\n    })\r\n}","import { constants } from \"./constants\";\r\n\r\nexport const _checkValidStatus = data => {\r\n    return [200, \"200\"].includes(data?.cod);\r\n}\r\n\r\nexport const convert_obj_to_query_string = (obj) => {\r\n    if(!isObject(obj)) return \"\";\r\n  \r\n    let query_string = []\r\n    if(obj && Object.keys(obj).length>0 )\r\n    {\r\n      Object.entries(obj).forEach(([key, val])=>{\r\n        if(val)\r\n        query_string.push(`${key}=${val}`)\r\n      })\r\n    }\r\n  \r\n    return query_string.length>0 && `?${query_string.join('&')}`\r\n  \r\n  }\r\n\r\n\r\nexport const isObject = (obj) => {\r\n\r\n    if(typeof obj==='object' && typeof obj !=='function' && obj !=null) return true;\r\n    return false;\r\n  }\r\n\r\nexport const ObjectShallowEqualityCheck = (object1, object2) => {\r\n    const keys1 = Object.keys(object1);\r\n    const keys2 = Object.keys(object2);\r\n  \r\n    if (keys1.length !== keys2.length) {\r\n      return false;\r\n    }\r\n  \r\n    for (let key of keys1) {\r\n      if (object1[key] !== object2[key]) {\r\n        return false;\r\n      }\r\n    }\r\n  \r\n    return true;\r\n}\r\n\r\nexport const isMobile = () => {\r\n    if(!document) return false;\r\n    if(getScreenWidth()<=constants.mobile_max_width) return true;\r\n    return false;\r\n}\r\nexport const isTablet = () => {\r\n    if(!document) return false;\r\n    if(getScreenWidth()>constants.mobile_max_width && getScreenWidth()<=constants.tablet_max_width) return true;\r\n    return false;\r\n}\r\nexport const isDesktop = () => {\r\n    if(!document) return false;\r\n    if(getScreenWidth()>constants.tablet_max_width) return true;\r\n    return false;\r\n}\r\n\r\nconst getScreenWidth = () => {\r\n\r\n    return (document.body || document.documentElement).clientWidth\r\n}\r\n\r\nexport const getDisplayableTempIndex = (switchedIndex, page_size, next=true, alreadyAllowedIndex=[]) => {\r\n    let allowedIndexes = alreadyAllowedIndex;\r\n    let nextAllowedIndex;\r\n    if(next || switchedIndex===0){\r\n        nextAllowedIndex = Array.from({length: page_size}, (_, i) => i + switchedIndex)\r\n    }\r\n    else\r\n    {\r\n        if(switchedIndex!=0)\r\n        nextAllowedIndex = Array.from({length: page_size}, (_, i) =>  switchedIndex-i)\r\n    }\r\n    if(switchedIndex===0){\r\n        return nextAllowedIndex;\r\n    }\r\n    if(next){\r\n        if((switchedIndex%page_size===0 && page_size===constants.mobile_page_size) || (switchedIndex%page_size===0 && page_size!==constants.mobile_page_size) ){\r\n            return nextAllowedIndex;\r\n        }\r\n    }\r\n    else\r\n    {\r\n        if(((switchedIndex+1)%page_size===0 && page_size===constants.mobile_page_size) || ((switchedIndex+1)%page_size===0 && page_size!==constants.mobile_page_size) ){\r\n            \r\n            return nextAllowedIndex;\r\n        }\r\n    }\r\n    \r\n\r\n    return allowedIndexes;\r\n}","import * as types from \"../types\"\r\nimport {\r\n    getWeatherData,\r\n    \r\n} from \"@/redux/services/weather\";\r\nimport { _checkValidStatus } from \"@/src/utils/globalFunctions\"\r\nimport { transformWeatherData } from \"../../utils/weatherHelper\";\r\n\r\nexport const getWeatherDataActions = (requestData) => {\r\n    return async (dispatch) => {\r\n        dispatch({type: types.GET_WEATHER_DATA_LOAD, data: []})\r\n        \r\n        try{\r\n            const res = await getWeatherData(requestData);\r\n            \r\n            if(_checkValidStatus(res)){\r\n                // transorm weather data\r\n                const data = transformWeatherData(res.list);\r\n\r\n                dispatch({type: types.GET_WEATHER_DATA_SUCCESS, data , message: 'Success'})\r\n            }\r\n        }catch(err){\r\n            dispatch({type: types.GET_WEATHER_DATA_ERR, data: err, message: err.message})\r\n        }\r\n    }\r\n}\r\n\r\nexport const setTempUnit = (tempUnit)=>{\r\n    return {type:types.SET_TEMP_UNIT, temp_unit: tempUnit}\r\n}\r\n\r\n\r\nexport const setSelectedIndex = (newIndex)=>{\r\n    return {type:types.SET_SELECTED_INDEX, selected_index: newIndex}\r\n}\r\n\r\nexport const setPageSize = (page_size)=>{\r\n    return {type:types.SET_PAGE_SIZE, page_size}\r\n}\r\n\r\n","import { useEffect, useState } from \"react\"\r\nimport { ObjectShallowEqualityCheck, isMobile, isTablet, isDesktop } from \"@/utils/globalFunctions\"\r\n\r\n\r\nexport default function useDeviceDetect () {\r\n    \r\n    const [devices, setDevices] = useState({\r\n        isMobile: false,\r\n        isTablet: false,\r\n        isDesktop: false\r\n    })\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        setDevices({\r\n            isMobile: isMobile(),\r\n            isTablet: isTablet(),\r\n            isDesktop: isDesktop()\r\n        })\r\n\r\n        window.addEventListener('resize',()=>{\r\n\r\n            let obj = {\r\n                        isMobile: isMobile(),\r\n                        isTablet: isTablet(),\r\n                        isDesktop: isDesktop()\r\n                    };\r\n\r\n            if(!ObjectShallowEqualityCheck(devices, obj) )\r\n            {\r\n                setDevices(obj)\r\n            }\r\n        });\r\n\r\n    },[])\r\n\r\n    return devices\r\n}","import { FormControlLabel, Grid, Radio, Typography, RadioGroup } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHorizOutlined';\r\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\r\nimport { getTemperatureWiseCalculation } from '../utils/weatherHelper';\r\nimport { setSelectedIndex, setTempUnit } from '../redux/actions/weatherActions';\r\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\r\nimport Box from '@material-ui/core/Box';\r\nimport clsx from 'clsx';\r\nimport useDeviceDetect from '../utils/useDeviceDetect';\r\nimport { useEffect, useState } from 'react';\r\nimport { getDisplayableTempIndex } from '../utils/globalFunctions';\r\n\r\nfunction WeatherInfo(props){\r\n\r\n    const temp_unit = useSelector((state)=>state.weather?.temp_unit);\r\n    const selected_index = useSelector((state)=>state.weather?.selected_index);\r\n    const cardsData = useSelector((state)=>state.weather?.data?.cardsData, shallowEqual);\r\n    const page_size = useSelector((state)=>state.weather?.page_size);\r\n    const [displayableIndex, setDisplayableIndex] = useState([]);\r\n\r\n    const dispatch = useDispatch();\r\n    const {isMobile, isTablet, isDesktop} = useDeviceDetect();\r\n    const useStyles = makeStyles({\r\n        root: {\r\n          maxWidth: '100vw'\r\n        },\r\n        radio: {\r\n            marginTop:'2%'\r\n        },\r\n        rotate: {\r\n            transform: 'rotate(180deg)'\r\n        },\r\n        arrowIcon: {\r\n            fontSize:60\r\n        },\r\n        cardBorder: {\r\n            border:'2px solid black'\r\n        }\r\n      });\r\n\r\n      useEffect(()=>{\r\n        setDisplayableIndex(getDisplayableTempIndex(selected_index, page_size, displayableIndex));\r\n      },[isMobile, isTablet, isDesktop])\r\n\r\n    const handleChange = (e)=>{\r\n        dispatch(setTempUnit(e.target.value));\r\n    }\r\n\r\n    const nextClick = () => {\r\n\r\n        dispatch(setSelectedIndex(selected_index+1));\r\n        setDisplayableIndex(getDisplayableTempIndex(selected_index+1, page_size,true,displayableIndex));\r\n    }\r\n    const prevClick = () => {\r\n        dispatch(setSelectedIndex(selected_index-1));\r\n        setDisplayableIndex(getDisplayableTempIndex(selected_index-1, page_size, false, displayableIndex));\r\n    }\r\n    const classes = useStyles();\r\n    return props?.data && (    \r\n        <>\r\n        \r\n        <RadioGroup aria-label=\"temperature unit selector\" name=\"temperature\" value={temp_unit} onChange={handleChange}>\r\n        <Box display=\"flex\" px={isMobile?4:10} py={isMobile?1:3}>\r\n                <Box flexGrow={1}>  \r\n                    <FormControlLabel value=\"celcius\" control={<Radio color='primary'/>} label=\"Celcius\" />\r\n                </Box>\r\n                <Box >\r\n                    <FormControlLabel  value=\"fahrenheit\" control={<Radio color='primary'/>} label=\"Fahrenheit\" />\r\n                </Box>\r\n            </Box>\r\n        </RadioGroup>\r\n        <Box display=\"flex\" px={isMobile?1:8} >\r\n\r\n            <Box  flexGrow={1} >\r\n            {\r\n                selected_index>0 && (<ArrowRightAltIcon onClick={prevClick} color=\"primary\" className={clsx(classes.rotate, classes.arrowIcon)}/>)\r\n            }\r\n            </Box>\r\n            <Box >\r\n            {\r\n                cardsData[selected_index+1]?.date && (<ArrowRightAltIcon onClick={nextClick} color=\"primary\" className={classes.arrowIcon}/>)\r\n            }\r\n            </Box>\r\n        </Box>\r\n        <Grid container  spacing={2} justify={'center'} className={classes.root}>\r\n            {\r\n                props.data.map((value, key)=>{\r\n                    return displayableIndex.includes(key)? (\r\n                        <Grid item key={value.date}>\r\n                            <Card className={clsx(selected_index===key && classes.cardBorder)}>\r\n                                <CardContent>\r\n                                    <Typography variant=\"body2\" component=\"p\">\r\n                                    Temp: <span dangerouslySetInnerHTML={{__html: getTemperatureWiseCalculation(value.avg_temp, temp_unit)}}></span>\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" component=\"p\">\r\n                                    Date: {value.date}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                                <CardActions>\r\n                                    <MoreHorizIcon/>\r\n                                </CardActions>\r\n                            </Card>\r\n                        </Grid>\r\n                    ): null\r\n                })\r\n            }\r\n        </Grid>\r\n        </>\r\n        \r\n    ) || null;\r\n}\r\n\r\nexport default WeatherInfo;","import React, { useEffect, useState } from \"react\";\r\nimport Loader from \"../components/Loader\";\r\nimport WeatherChart from \"../components/WeatherChart\";\r\nimport WeatherInfo from \"../components/WeatherInfo\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport {getWeatherDataActions} from \"@/redux/actions/weatherActions\";\r\nimport { convert_obj_to_query_string } from \"../utils/globalFunctions\";\r\nimport { GET_WEATHER_DATA_SUCCESS } from \"../redux/types\";\r\nimport { constants } from \"../utils/constants\";\r\nimport useDeviceDetect from \"../utils/useDeviceDetect\";\r\nimport { setPageSize } from \"../redux/actions/weatherActions\";\r\nimport Container from '@material-ui/core/Container';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nfunction Weather(){\r\n\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n    const weatherData = useSelector((state)=>state.weather, shallowEqual);\r\n    const dispatch = useDispatch();\r\n    // ------------------------------------------------------------------\r\n    // Initial mount and send request to server\r\n    useEffect(()=>{\r\n        let request_data_object = {\r\n            q: 'Munich,de',\r\n            APPID : process.env.REACT_APP_APPID,\r\n            cnt: 40\r\n        };\r\n        dispatch(getWeatherDataActions(convert_obj_to_query_string(request_data_object)));\r\n    },[])\r\n    \r\n    // --------------------------------------------------------------------\r\n    // In this side effect we set the loader state\r\n    useEffect(()=>{\r\n        if(weatherData.type===GET_WEATHER_DATA_SUCCESS){\r\n            setIsLoaded(true);\r\n        }\r\n    },[weatherData.type])\r\n\r\n    // -------------------------------------------------------------------\r\n    // detect device and set page size accordinlgy\r\n    const {isMobile, isTablet, isDesktop} = useDeviceDetect();\r\n    useEffect(()=>{\r\n\r\n        if(isMobile && weatherData?.page_size!==constants.mobile_page_size){\r\n            dispatch(setPageSize(constants.mobile_page_size));\r\n        }\r\n\r\n    },[isMobile, weatherData?.page_size,isTablet, isDesktop])\r\n    \r\n    // --------------------------------------------------\r\n    // define max width of container element\r\n    const useStyles = makeStyles({\r\n        container: {\r\n          maxWidth: isMobile?'350px':'600px', // setting this width because we don't need too big screen\r\n          margin:'0 auto'\r\n        }\r\n      });\r\n    const classes = useStyles();\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        \r\n        if((isDesktop || isTablet) && weatherData?.page_size!==constants.desktop_page_size){\r\n            dispatch(setPageSize(constants.desktop_page_size));\r\n        }\r\n        \r\n    },[isMobile, weatherData?.page_size, isTablet, isDesktop])\r\n    \r\n\r\n    console.log(weatherData);\r\n    // --------------------------------------------------------------------\r\n    // Render or load screens... \r\n    return (isLoaded && weatherData?.data?.cardsData)?(\r\n        <Container className={classes.container}>\r\n            <WeatherInfo data={weatherData.data.cardsData}/>\r\n            <WeatherChart data={weatherData.data.barChartData} />\r\n        </Container>\r\n    ):(\r\n        <Loader />\r\n    );\r\n}\r\n\r\nexport default Weather;","import Weather from './containers/Weather';\n\nfunction App() {\n  return (\n    <Weather/>\n  );\n}\n\nexport default App;\n","import { createStore, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport rootReducer from \"./reducers\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nlet _store\r\n\r\nfunction initStore() {\r\n  return (_store = createStore(\r\n    rootReducer,\r\n    {},\r\n    composeWithDevTools(applyMiddleware(thunk))\r\n  ))\r\n}\r\n\r\n\r\n\r\nexport const store = _store ?? initStore()\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { constants } from \"../../utils/constants\";\r\nimport * as types from \"../types\";\r\n\r\nconst initialState = {\r\n    type: null,\r\n    data: null,\r\n\tmessage: null,\r\n    temp_unit: constants.temp_fahrenheit,\r\n    selected_index: 0,\r\n    page_size: constants.mobile_page_size\r\n}\r\nexport const weatherData = (state = initialState, {data, type, message, ...payload}) => {\r\n    switch (type) {\r\n\t\tcase types.GET_WEATHER_DATA_SUCCESS :\r\n        case types.GET_WEATHER_DATA_LOAD :\r\n        case types.GET_WEATHER_DATA_ERR :\r\n        {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tdata,\r\n                type,\r\n                message\r\n\t\t\t};\r\n        }\r\n        case types.SET_TEMP_UNIT: {\r\n            return {\r\n\t\t\t\t...state,\r\n\t\t\t\ttemp_unit: payload.temp_unit\r\n\t\t    }\r\n        }\r\n        case types.SET_PAGE_SIZE: {\r\n            return {\r\n                ...state,\r\n                page_size: payload.page_size\r\n            }\r\n        }\r\n        case types.SET_SELECTED_INDEX: {\r\n            return {\r\n                ...state,\r\n                selected_index: payload.selected_index\r\n            };\r\n        }\r\n        default:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n\r\n","import { combineReducers } from 'redux'\r\nimport {\r\n\tweatherData\r\n } from './weatherReducer'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n\tweather : weatherData,\r\n\t\r\n})\r\n\r\nexport default rootReducer\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport {store} from './redux/store';\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}